name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Python Code
        run: |
          pip install flake8
          flake8 ml_detector/src

  test:
    runs-on: ubuntu-latest
    services:
      prometheus:
        image: prom/prometheus:latest
        ports:
          - 9090:9090
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r ml_detector/requirements.txt
      - name: Run Unit Tests
        run: |
          pytest ml_detector/src --junitxml=reports/junit.xml

  build-terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Init & Validate
        working-directory: terraform
        run: |
          terraform init
          terraform validate

  deploy-infra:
    runs-on: ubuntu-latest
    needs: build-terraform
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Apply Terraform
        working-directory: terraform
        run: terraform apply -auto-approve
      - name: Run Ansible Provision
        working-directory: ansible
        run: ansible-playbook playbooks/provision.yml

  train-model:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Requirements
        run: pip install -r ml_detector/requirements.txt
      - name: Train Model
        run: python ml_detector/src/train.py --data ml_detector/data/synthetic_network.csv --output ml_detector/models/isolation_forest.pkl
      - name: Upload Model Artifact
        uses: actions/upload-artifact@v3
        with:
          name: isolation_forest_model
          path: ml_detector/models/isolation_forest.pkl

  chaos-test:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - uses: actions/checkout@v3
      - name: Install Chaos Toolkit
        run: pip install chaostoolkit
      - name: Run Chaos Experiment
        run: chaos run chaos/experiment.json